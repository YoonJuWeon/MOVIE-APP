{"version":3,"sources":["Movie.js","Layout/Footer.js","App.js","index.js"],"names":["Movie","_ref","id","title","year","summary","poster","genres","react_default","a","createElement","className","src","alt","map","genre","index","slice","Footer","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","React","Component","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_getPrototypeOf2","_this","_len","args","Array","_key","concat","isLoading","movies","getMovies","asyncToGenerator","_callee","_yield$axios$get","_context","axios","get","data","setState","_this$state","movie","src_Movie","large_cover_image","src_Layout_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.02575c73.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\nfunction Movie({ id, title, year, summary, poster, genres }) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n        <div className=\"movie__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            <ul className=\"movie__genres\">\n                {genres.map((genre, index)=> {\n                    return (\n                        <li className=\"movie__genre\">\n                            {genre}\n                        </li>\n                    );\n                })}\n            </ul>\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n        </div>\n    </div>\n    );\n}\n\nMovie.propTypes = {\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nexport default Movie;","import React from 'react';\nimport './Footer.css';\nclass Footer extends React.Component{\n    render(){\n        return (\n            <div className=\"app-footer\">\n              MOVIE APP FOOTER\n            </div>\n        )\n    }\n}\n     \nexport default Footer;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from './Movie';\nimport './App.css';\nimport Footer from './Layout/Footer';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  //getMovies()함수 기다린 다음, axios.get()함수가 반환한 데이터 잡기\n  getMovies = async () => {\n    const {\n      data: {\n        data: {movies},\n      },\n    } = await axios.get('http://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n    this.setState({movies, isLoading: false});\n  };\n    \n  componentDidMount() {\n    // 영화 데이터 로딩!\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n         ) : (\n          <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie \n             key={movie.id}\n             id={movie.id}\n             year={movie.year}\n             title={movie.title}\n             summary={movie.summary}\n             poster={movie.large_cover_image}\n             genres={movie.genres}\n            />\n          ))}\n        <Footer/>\n        </div>\n     )}\n    </section>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}